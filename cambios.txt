<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>pagina_principal</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: white;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
        }
        .container {
            width: 98vw;
            height: 98vh;
            background-image: url('/static/Imagen2.jpg'); 
            background-size: cover; 
            background-position: center; 
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            position: relative;
            display: flex;
        }
        .sidebar {
            width: 20%;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            padding: 20px;
        }
        .content {
            flex-grow: 1;
            padding: 20px;
        }
        .header {
            padding: 20px;
            font-size: 20px;
            color: firebrick;
            align-items: center;
        }
        .logo {
            width: 100px;
            height: 100px;
            margin-bottom: 20px;
        }
        .welcome {
            font-size: 12px;
            color: firebrick;
            margin-bottom: 20px;
            position: absolute; 
            top: 20px; 
            right: 20px;
        }
        .titulo {
            font-size: 18px;
            font-family: 'Franklin Gothic Medium';
            color: firebrick;
            margin-bottom: 20px;
            display: flex; 
            flex-direction: column; 
            align-items: center; 
            justify-content: center; 
            position: absolute; 
            top: 4%; 
            left: 9.2%; 
        }
        .button {
            padding: 20px 20px;
            margin: 5px 0;
            background: transparent;
            color: white;
            border: 2px solid white;
            cursor: pointer;
            font-size: 19px;
            text-align: center;
            border-radius: 15px;
            box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3), inset -2px -2px 5px rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
            width: 100%;
        
        }
        .button:hover {
            background:  rgba(151, 8, 8, 0.8);
        }
        .highlight {
            color: rgb(110, 107, 107);
        }
        .video-container { 
            width: 78%; 
            display: flex; 
            justify-content: center; 
            align-items: center; 
            margin-top: 0px;
            box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3), inset -2px -2px 5px rgba(255, 255, 255, 0.3);
        }
        video { 
            width: 70%; 
            height: auto; 
            border: none; 
            border-radius: 5px; 
            box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.3), inset -2px -2px 5px rgba(255, 255, 255, 0.3);
        }
        /* Estilo del formulario */
        .formulario {
            display: none; /* Ocultar el formulario inicialmente */
            background: rgba(255, 255, 255, 0.8);
            border-radius: 10px;
            padding: 20px;
            position: absolute;
            width: 70%;
            height: 70%;
            top: 50%;
            left: 60%;
            transform: translate(-50%, -50%);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .formulario input {
            width: 15%;
            padding: 10px;
            margin: 20px 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .formulario image {
            width: 15%;
            padding: 10px;
            margin: 20px 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .formulario button {
            padding: 10px 20px;
            background: firebrick;
            color: white;
            align-items: end;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        .formulario button:hover {
            background: darkred;
        }
        .formulario .cerrar {
            background: gray;
            margin-top: 10px;
        }
        .formulario .cerrar:hover {
            background: darkgray;
        }
        .dropdown-menu {
            display: none;
            flex-direction: column;
            margin-top: 10px;
            width: 100%;
        }
        .dropdown-menu button {
            margin: 5px 0;
            padding: 10px 20px;
            background: lightgray;
            color: black;
            border: 1px solid #ccc;
            border-radius: 10px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.2s;
        }
        .dropdown-menu button:hover {
            background: gray;
            color: white;
        }
        .combo-box { 
            padding: 10px; 
            width: 200px; 
            border: 1px solid #ccc; 
            border-radius: 5px;
             margin: 10px 0;
        }
        .formulario frame { 
            width: 10px; 
            height: 10px; 
            border: 1px solid #ccc; 
            margin: 10px 0; 
        }
        .formulario .frame img{ 
            display: none; 
            width: 100px;  
            height: 100px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <img src="/static/logo2.jpg" alt="Logo" class="logo">
            <div class="welcome">
                <marquee direction="">
                    ¡Bienvenido Usuario {{ usuario }}!
                </marquee>
            </div>
            <div class="titulo">
                <span>SISTEMA DE </span>
                <span>INVENTARIO PARA </span>
                <span>BIENES NACIONALES </span>
                <span>(SIBIN)</span></div>
            <button class="button" onclick="mostrarFormulario('formulario1')" onmouseover="hideDropdown('dropdown1')">REGISTRO</button>
            <button class="button" onclick="mostrarFormulario('formulario2')" onmouseover="hideDropdown('dropdown1')">ASIGNACIÓN</button>
            <button class="button" onmouseover="showDropdown('dropdown1')">CONSULTA</button>
            <div id="dropdown1" class="dropdown-menu">
                <button onclick="mostrarFormulario('formulario4')">Bienes Asignados</button>
                <button onclick="mostrarFormulario('formulario3')">Bienes Disponibles</button>
            </div>    
            <button class="button" onclick="mostrarFormulario('formulario5')" onmouseover="hideDropdown('dropdown1')">DESINCORPORACIÓN</button>
            <button class="button" onclick="mostrarFormulario('formulario6')" onmouseover="hideDropdown('dropdown1')" >REPORTE</button>
        </div>
        <div class="video-container" onmouseover="hideDropdown('dropdown1')"> 
            <video autoplay muted loop>
                <source src="/static/VideoLogo.mp4" type="video/mp4">
                <source src="/static/VideoLogo.webm" type="video/webm">
                <source src="/static/VideoLogo.ogv" type="video/ogg">
                Tu navegador no soporta la etiqueta de video. 
            </video> 
        </div>
        <!-- Formulario -->
        <div id="formularios">
            <div id="formulario1" class="formulario"> 
                <h2>Registro de Bienes Nacionales</h2> 
                <label for="codigo">Código</label> 
                <input type="text" id="codigo" placeholder="Codigo">
                <label for="categoria">Categoría</label> 
                <input type="text" id="categoria" placeholder="Categoria">
                <label for="marca">Marca</label> 
                <input type="text" id="marca" placeholder="Marca">
                <br><label for="producto">Producto</label>
                <input type="text" id="producto" placeholder="Producto">
                <label for="color">Color</label> 
                <input type="text" id="color" placeholder="Color"> 
                <label for="serial">Serial</label> 
                <input type="text" id="serial" placeholder="Serial">
                <br><label for="fecha_registro">Fecha de Registro</label> 
                <input type="date" id="fecha_registro" placeholder="Fecha de Registro">
                <label for="cant">Cantidad</label>
                <input type="text" id="cantidad" placeholder="Cantidad">
                <label for="imagen">Imagen</label> 
                <input type="file" id="imagen"> 
                <br><button>Enviar</button> 
                <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
            </div>
            <div id="formulario2" class="formulario">
                <h2>Asignación</h2>
                <!-- Aquí puedes agregar los campos necesarios para este formulario -->
                <label for="asignacion-codigo">Código de Asignación</label>
                <input type="text" id="asignacion-codigo" placeholder="Código de Asignación">
                <label>Selecciona una gerencia:</label>
                <select id="gerencias" class="combo-box">
                    <option value="" disabled selected>Selecciona una opción...</option>
                </select>
                <br><label for="asignacion-fecha">Fecha de Asignación</label>
                <input type="text" id="asignacion-fecha" placeholder="Fecha de Asignación">
                <div class="frame" id="frame">
                    <img src="/static/logo2.jpg" alt="Imagen" id="miImagen">
                </div>
                <br><button>Enviar</button> 
                <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
            </div>
            <div id="formulario3" class="formulario"> 
                <h2>Consulta</h2>
                 <!-- Aquí puedes agregar los campos necesarios para este formulario -->
                 <label for="consulta-fecha">Bienes Disponibles</label>
                 <input type="text" id="consulta-fecha" placeholder="Fecha de Consulta">
                 <br><button>Enviar</button>
                 <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
             </div>
             <div id="formulario4" class="formulario"> 
                <h2>Consulta</h2>
                 <!-- Aquí puedes agregar los campos necesarios para este formulario -->
                 <label for="consulta-fecha">Bienes Asignados</label>
                 <input type="text" id="consulta-fecha" placeholder="Fecha de Consulta">
                 <br><button>Enviar</button>
                 <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
             </div>
             <div id="formulario5" class="formulario"> 
                <h2>Desincorporación</h2>
                 <!-- Aquí puedes agregar los campos necesarios para este formulario -->
                 <label for="consulta-fecha">Bienes Asignados</label>
                 <input type="text" id="consulta-fecha" placeholder="Fecha de Consulta">
                 <br><button>Enviar</button>
                 <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
             </div>
             <div id="formulario6" class="formulario">
                <h2>Reporte</h2>   

            </div>
     </div>
     <script>
         function mostrarFormulario(formularioId) {
             // Ocultar todos los formularios
             const formularios = document.getElementsByClassName('formulario');
             for (let formulario of formularios) {
                 formulario.style.display = 'none';
             }
 
             // Mostrar el formulario seleccionado
             const formularioSeleccionado = document.getElementById(formularioId);
             formularioSeleccionado.style.display = 'block';
         }
 
         function cerrarFormulario() {
             const formularios = document.getElementsByClassName('formulario');
             for (let formulario of formularios) {
                 formulario.style.display = 'none';
             }
         }
 
         function highlight(element) {
             element.classList.add('highlight');
             setTimeout(() => {
                 element.classList.remove('highlight');
             }, 500);
         }
         function showDropdown(dropdownId) {
            const dropdown = document.getElementById(dropdownId);
            dropdown.style.display = 'flex';
        }

        function hideDropdown(dropdownId) {
            const dropdown = document.getElementById(dropdownId);
            dropdown.style.display = 'none';
        }
        document.addEventListener("DOMContentLoaded", function() 
        { fetch('/mi_aplicacion/get_gerencias/') 
        .then(response => response.json()) 
        .then(data => { 
            const comboBox = document.getElementById('gerencias'); 
            comboBox.innerHTML = ''; // Limpiar opciones actuales 
            data.forEach(gerencia => { 
                const newOption = document.createElement('option'); 
                newOption.value = gerencia[0]; // Asumiendo que el primer valor es el ID 
                newOption.textContent = gerencia[1]; // Asumiendo que el segundo valor es el nombre 
                comboBox.appendChild(newOption); 
            }); 
        }) 
        .catch(error => { 
            console.error('Error al cargar las opciones:', error); 
            document.getElementById('gerencias').innerHTML = '<option value="">Error al cargar opciones</option>'; 
        });
     });     
    </script>
 </body>
 </html>
     {% load static %}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulario Principal</title>
    <style>
        .combo-box {
            padding: 10px;
            width: 200px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px 0;
        }
        .frame {
            width: 220px;
            height: 220px;
            border: 1px solid #000;
        }
    </style>
</head>
<body>
    <div id="formularios">
        <div id="formulario2" class="formulario">
            <h2>Asignación</h2>
            <label>Selecciona una gerencia:</label>
            <select id="gerencias" class="combo-box">
                <option value="" disabled selected>Selecciona una opción...</option>
            </select>
            <label for="asignacion-fecha">Fecha de Asignación</label>
            <input type="date" id="asignacion-fecha" placeholder="Fecha de Asignación">
            <br><label for="asignacion-codigo">Código de Asignación</label>
            <input type="text" id="asignacion-codigo" placeholder="Código de Asignación">
            <div class="frame">
                <img src="" alt="Imagen QR" id="imagenQR">
            </div>
            <br><button id="enviarAsignacion">Enviar</button>
            <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById('enviarAsignacion').addEventListener('click', function(event) {
                event.preventDefault();  // Evitar que el formulario se envíe automáticamente

                const codigo = document.getElementById('asignacion-codigo').value;
                const fechaAsignacion = document.getElementById('asignacion-fecha').value;
                const gerenciaId = document.getElementById('gerencias').value;
                
                const formData = new FormData();
                formData.append('codigo', codigo);
                formData.append('fecha_asignacion', fechaAsignacion);
                formData.append('gerencia_id', gerenciaId);

                fetch('/mi_aplicacion/generar_qr_y_guardar/', {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-CSRFToken': getCookie('csrftoken'),
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.image) {
                        const img = document.getElementById('imagenQR');
                        img.src = `data:image/png;base64,${data.image}`;
                    } else {
                        alert('Error al generar el QR.');
                    }
                })
                .catch(error => {
                    console.error('Error al generar el QR:', error);
                });
            });

            // Obtener y cargar las opciones de gerencia
            fetch('/mi_aplicacion/get_gerencias/')
                .then(response => response.json())
                .then(data => {
                    const comboBox = document.getElementById('gerencias');
                    comboBox.innerHTML = '';  
                    data.forEach(gerencia => {
                        const newOption = document.createElement('option');
                        newOption.value = gerencia[0];  
                        newOption.textContent = gerencia[1];  
                        comboBox.appendChild(newOption);
                    });
                })
                .catch(error => {
                    console.error('Error al cargar las opciones:', error);
                    document.getElementById('gerencias').innerHTML = '<option value="">Error al cargar opciones</option>';
                });
        });

        // Función para obtener el token CSRF
        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }

        function cerrarFormulario() {
            const formularios = document.getElementsByClassName('formulario');
            for (let formulario of formularios) {
                formulario.style.display = 'none';
            }
        }
    </script>
</body>
</html>


    // Obtener y cargar las opciones de gerencia
    fetch('/mi_aplicacion/get_gerencias/')
        .then(response => response.json())
        .then(data => {
            const comboBox = document.getElementById('gerencias');
            comboBox.innerHTML = '';  
            data.forEach(gerencia => {
                const newOption = document.createElement('option');
                newOption.value = gerencia[0];  
                newOption.textContent = gerencia[1];  
                comboBox.appendChild(newOption);
            });
        })
        .catch(error => {
            console.error('Error al cargar las opciones:', error);
            document.getElementById('gerencias').innerHTML = '<option value="">Error al cargar opciones</option>';
        });
});

// Función para obtener el token CSRF
function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

function cerrarFormulario() {
    const formularios = document.getElementsByClassName('formulario');
    for (let formulario of formularios) {
        formulario.style.display = 'none';
    }
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consulta de Bienes Asignados</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
        }
        th {
            cursor: pointer;
        }
        th, td {
            text-align: left;
        }
        .frame {
            display: none; /* Ocultar el informe inicialmente */
            background: rgba(255, 255, 255, 0.8);
            border-radius: 10px;
            padding: 20px;
            position: absolute;
            width: 70%;
            height: 80%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        .table-container {
            overflow-y: auto;
            max-height: 300px;  /* Ajusta esta altura según tus necesidades */
        }
        .table-container table {
            width: 100%;
        }
    </style>
</head>
<body>
    <div id="formulario3" class="formulario">
        <h2>Consulta de Bienes Asignados</h2>
        <label for="palabra">Palabra de búsqueda</label>
        <input type="text" id="searchInput" placeholder="Buscar por palabra clave..." onkeyup="filtrarTabla()">
        <div class="table-container">
            <table id="asignacionesTable">
                <thead>
                    <tr>
                        <th onclick="ordenarTabla(0)">Id</th>
                        <th onclick="ordenarTabla(1)">Codigo</th>
                        <th onclick="ordenarTabla(2)">Fecha de Asignacion</th>
                        <th onclick="ordenarTabla(3)">Gerencia ID</th>
                        <th onclick="ordenarTabla(4)">QR Code</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
    </div>

    <div id="reportFrame" class="frame">
        <h2>Informe</h2>
        <p id="reportContent"></p>
        <button onclick="closeReport()">Cerrar</button>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            fetch('/obtener_asignaciones/')
                .then(response => response.json())
                .then(data => {
                    const tabla = document.getElementById('asignacionesTable').getElementsByTagName('tbody')[0];
                    if (tabla) {
                        data.forEach(asignacion => {
                            const fila = tabla.insertRow();
                            fila.insertCell(0).textContent = asignacion.id;
                            fila.insertCell(1).textContent = asignacion.codigo;
                            fila.insertCell(2).textContent = asignacion.fecha_asignacion;
                            fila.insertCell(3).textContent = asignacion.gerencia_id;
                            fila.insertCell(4).innerHTML = `<img src="data:image/png;base64,${asignacion.qr_code}" alt="QR Code" style="width: 50px; height: auto;">`;  // Ajustar tamaño de imagen
                        });
                    } else {
                        console.error('Error: No se encontró el elemento tbody en la tabla.');
                    }
                })
                .catch(error => console.error('Error al obtener las asignaciones:', error));
        });

        function ordenarTabla(n) {
            const table = document.getElementById("asignacionesTable");
            let rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            switching = true;
            dir = "asc";

            while (switching) {
                switching = false;
                rows = table.rows;

                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];

                    if (dir === "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir === "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount === 0 && dir === "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

        function filtrarTabla() {
            const input = document.getElementById("searchInput");
            const filter = input.value.toLowerCase();
            const table = document.getElementById("asignacionesTable");
            const trs = table.getElementsByTagName("tr");

            for (let i = 1; i < trs.length; i++) {
                const tds = trs[i].getElementsByTagName("td");
                let mostrarFila = false;

                for (let j = 0; j < tds.length; j++) {
                    if (tds[j]) {
                        const txtValue = tds[j].textContent || tds[j].innerText;
                        if (txtValue.toLowerCase().indexOf(filter) > -1) {
                            mostrarFila = true;
                            break;
                        }
                    }
                }
                trs[i].style.display = mostrarFila ? "" : "none";
            }
        }

        const table = document.getElementById('asignacionesTable');
        table.addEventListener('click', function(event) {
            const target = event.target;
            if (target.tagName === 'TD') {
                const row = target.parentNode;
                generateReport(row);
            }
        });

        function generateReport(row) {
            const cells = row.getElementsByTagName('td');
            const reportData = {
                id: cells[0].textContent,
                codigo: cells[1].textContent,
                fecha_asignacion: cells[2].textContent,
                gerencia_id: cells[3].textContent,
                qr_code: cells[4].querySelector('img').src
            };

            document.getElementById('reportContent').innerHTML = `ID: ${reportData.id}<br>Codigo: ${reportData.codigo}<br>Fecha de Asignación: ${reportData.fecha_asignacion}<br>Gerencia ID: ${reportData.gerencia_id}<br>QR Code: <img src="${reportData.qr_code}" alt="QR Code" style="width: 50px; height: auto;">`;
            document.getElementById('reportFrame').style.display = 'block';
        }

        function closeReport() {
            document.getElementById('reportFrame').style.display = 'none';
        }

        function cerrarFormulario() {
            document.getElementById('formulario3').style.display = 'none';
        }
    </script>
</body>
</html>
<div id="formulario2" class="formulario">
    <h2>Asignación</h2>
    <label>Selecciona una gerencia:</label>
    <select id="gerencias" class="combo-box">
        <option value="" disabled selected>Selecciona una opción...</option>
    </select>
    <label for="asignacion-fecha">Fecha de Asignación</label>
    <input type="date" id="asignacion-fecha" placeholder="Fecha de Asignación">
    <br><label for="asignacion-bien">Bien a Asignar</label>
    <select id="Bienes" class="combo-box">
        <option value="" disabled selected>Selecciona una opción...</option>
    </select>
    <div class="frame">
        <img src="" id="imagenQR">
    </div>
    <br><button id="enviarAsignacion">Enviar</button> 
    <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
    <br><br>
</div>

<div id="formulario2" class="formulario">
    <h2>Asignación</h2>
    <label>Selecciona una gerencia:</label>
    <select id="gerencias" class="combo-box">
        <option value="" disabled selected>Selecciona una opción...</option>
    </select>
    <label for="asignacion-fecha">Fecha de Asignación</label>
    <input type="date" id="asignacion-fecha" placeholder="Fecha de Asignación">
    <br><label for="asignacion-bien">Bien a Asignar</label>
    <select id="Bienes" class="combo-box">
        <option value="" disabled selected>Selecciona una opción...</option>
    </select>
    <div class="frame">
        <img src="" id="imagenQR">
    </div>
    <br><button id="enviarAsignacion">Enviar</button> 
    <button class="cerrar" onclick="cerrarFormulario()">Cerrar</button>
    <br><br>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() { 
    fetch('/mi_aplicacion/obtener_disponibles/') 
    .then(response => response.json()) 
    .then(data => { 
        const comboBox = document.getElementById('Bienes'); 
        comboBox.innerHTML = ''; 
        data.forEach(bienes => { 
            const newOption = document.createElement('option'); 
            newOption.value = bienes.Id_Registro; 
            newOption.textContent = bienes.Producto;
            newOption.dataset.producto = bienes.Producto;  // Almacenar el nombre del producto como data-attribute
            comboBox.appendChild(newOption); 
        }); 
    });

    document.getElementById('enviarAsignacion').addEventListener('click', function(event) {
        event.preventDefault();  // Evitar que el formulario se envíe automáticamente

        const bienId = document.getElementById('Bienes').value;
        const producto = document.getElementById('Bienes').options[document.getElementById('Bienes').selectedIndex].dataset.producto;
        const fechaAsignacion = document.getElementById('asignacion-fecha').value;
        const gerenciaSelect = document.getElementById('gerencias');
        const gerenciaId = gerenciaSelect.value;
        const gerenciaNombre = gerenciaSelect.options[gerenciaSelect.selectedIndex].text;

        const formData = new FormData();
        formData.append('codigo', bienId);
        formData.append('producto', producto);  // Añadir el nombre del producto
        formData.append('fecha_asignacion', fechaAsignacion);
        formData.append('gerencia_id', gerenciaId);
        formData.append('gerencia_nombre', gerenciaNombre);
        formData.append('csrfmiddlewaretoken', getCookie('csrftoken')); // Añadir token CSRF

        fetch('/mi_aplicacion/generar_qr_y_guardar/', {
            method: 'POST',
            body: formData,
            headers: {
                'X-CSRFToken': getCookie('csrftoken'),
            },
        })
        .then(response => response.json()) 
        .then(data => { 
            console.log(data.image);
            if (data.image) { 
                const img = document.getElementById('imagenQR'); 
                img.src = `data:image/png;base64,${data.image}`; 
                img.style.width = "100%";
                img.style.height = "auto";
            } else { 
                alert('Error al generar el QR.');
            } 
        }) 
        .catch(error => { 
            console.error('Error al generar el QR:', error);
        }); 
    });

    var span = document.getElementsByClassName("close")[0]; 
    span.onclick = function() { 
        const modal = document.getElementById("qrModal");
        modal.style.display = "none";
    }
});

function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
</script>
